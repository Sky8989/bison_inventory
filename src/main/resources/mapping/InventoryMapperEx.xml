<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--namespace可以写类的全限定名，这样做的好处是
　　sqlSession.insert(Student.class.getName()+".addStudent");
-->
<mapper namespace="com.leaderment.mapper.mybatis.InventoryMapperEx">
    
    <select id="findStorageNumByProductId" resultType="java.lang.Integer">
    SELECT
        sum(FLOOR(r1.i_quantity) + FLOOR(r8.i_quantity))
    FROM
        U8.rdrecords01 r1,
        U8.rdrecords08 r8,
        bison.product p
    where
        r1.c_inv_code = p.product_u8_code
        and p.product_u8_code  = r8.c_inv_code
        and p.product_id = #{productId}
        group by p.product_id
    </select>

    <select id="findStorageNumOutByProductId" resultType="java.lang.Integer">
    SELECT
        sum(FLOOR(r9.i_quantity)) as storageNumber9
    FROM
        U8.rdrecords01 r9,
        bison.product p
    where
        r9.c_inv_code = p.product_u8_code
        and p.product_id = #{productId}
        group by p.product_id

    </select>

    <select id="findAfnFulfillableQuantityByAsinId" resultType="java.lang.Integer">
     SELECT
        SUM(inv.afn_fulfillable_quantity)
     FROM
        (SELECT
            MAX(snapshot_time) AS snapshot_time
        FROM
            bison_amz_product_inventory.amz_inventory) t1
    LEFT JOIN
        bison_amz_product_inventory.amz_inventory inv ON t1.snapshot_time = inv.snapshot_time
    WHERE
        inv.asin_id = #{asinId}
    </select>

    <select id="findAfnUnsellableQuantityByAsinId" resultType="java.lang.Integer">
     SELECT
            SUM(inv.afn_unsellable_quantity)
         FROM
            (SELECT
                MAX(snapshot_time) AS snapshot_time
            FROM
                bison_amz_product_inventory.amz_inventory) t1
        LEFT JOIN
            bison_amz_product_inventory.amz_inventory inv ON t1.snapshot_time = inv.snapshot_time
        WHERE
            inv.asin_id = #{asinId}

    </select>


    <select id="findShippedNumberByAsinId" resultType="java.lang.Integer">
        SELECT
            sum(item.quantity_shipped - item.quantity_received) as shipped
        FROM
            bison_amz_product_inventory.amz_shipment aship,
            bison_amz_product_inventory.amz_shipment_item  item,
            bison_amz_product_inventory.amz_seller_sku sku

        where
            aship.shipment_id = item.shipment_id
            and item.seller_sku = sku.sku
            and (aship.status_id = 2 or aship.status_id = 6)
            and sku.asin_id = #{asinid}
        group by sku.asin_id
    </select>

    <select id="findSupplierStorageNumByProductId" resultType="java.lang.Integer">
        SELECT
            sum(floor(r8.i_quantity+r1.i_quantity))
        FROM
            U8.supplier s,
            U8.rdrecords08 r8,
            U8.rdrecords08 r1,
            U8.ven_and_inv vai,
            bison.product p
        where
             p.product_u8_code = vai.c_inv_code
             and vai.c_ven_code = s.c_ven_code
             and r8.c_inv_code = p.product_u8_code
             and r1.c_inv_code = p.product_u8_code
             and p.product_id = #{productId}

        group by p.product_id
    </select>

    <select id="findSupplierStorageNumOutByProductId" resultType="java.lang.Integer">
        SELECT
            sum(floor(r9.i_quantity))
        FROM
            U8.supplier s,
            U8.rdrecords09 r9,
            U8.ven_and_inv vai,
            bison.product p
        where
         r9.c_inv_code = vai.c_inv_code
         and vai.c_ven_code = s.c_ven_code
         and r9.c_inv_code = p.product_u8_code
         and p.product_id = #{productId}
         group by p.product_id
    </select>


    <!--按产品类型汇总-->
    <select id="findModelNumberInventoryList" parameterType="com.leaderment.pojo.dto.InventoryDTO"  resultType="com.leaderment.pojo.vo.InventoryVO">
        select
            p.product_id					as productId,
            p.product_model_number			as productModelNumber,
            p.total_safety_day				as totalSafetyDay,
            p.amz_safety_day				as amzSafetyDay,
            p.est_units_avg_day_ratio		as estUnitsAvgDayRatio,
            p.last_units_avg_day_ratio   	as lastUnitsAvgDayRatio,
            p.big_last_units_avg_day 		as bigLastUnitsAvgDay,
            p.big_est_unitis_avg_day_ratio  as bigEstUnitisAvgDayRatio,
            p.big_item_key_id				as bigItemKeyId,
            p.samll_last_units_avg_day		as samllLastUnitsAvgDay,
            p.samll_est_units_avg_day_ratio as samllEstUnitsAvgDayRatio,
            p.samll_item_key_id				as samllItemKeyId,
            pc.product_category				as productCategory



        from
            bison.product p left join
            bison.product_category pc
            on p.product_category_id = pc.product_category_id
        left join (
                    select
                           sp_item.product_id
                    from
                           bison_amz_product_inventory.sale_plan_item sp_item
                    left join
                            bison_amz_product_inventory.sale_plan sp
                    on
                            sp_item.sale_plan_id = sp.sale_plan_id
                    where
                            sp.plan_date like concat('',#{localMonth},'%')
                    group by
                            sp_item.product_id
                           ) t1
            on
                p.product_id = t1.product_id
            where
                1 = 1
            <if test="businessUnitId != 0">
                and p.business_unit_id = #{businessUnitId}
            </if>
            <if test="productCategoryId != 0">
                and p.product_category_id = #{productCategoryId}
            </if>
            <if test="productId != 0">
                and p.product_id = #{productId}
            </if>

    </select>



    <select id="findSellerInventoryList" parameterType="com.leaderment.pojo.dto.InventoryDTO"  resultType="com.leaderment.pojo.vo.InventoryVO">
         select
            b.brand_name       			    as brandName,
            t1.country			            as countryId,
            c.country_name			        as countryName,
            t1.user_id			            as userId,
            p.product_id					as productId,
            p.product_model_number			as productModelNumber,
            p.total_safety_day				as totalSafetyDay,
            p.amz_safety_day				as amzSafetyDay,
            p.est_units_avg_day_ratio		as estUnitsAvgDayRatio,
            p.last_units_avg_day_ratio   	as lastUnitsAvgDayRatio,
            p.big_last_units_avg_day 		as bigLastUnitsAvgDay,
            p.big_est_unitis_avg_day_ratio  as bigEstUnitisAvgDayRatio,
            p.big_item_key_id				as bigItemKeyId,
            p.samll_last_units_avg_day		as samllLastUnitsAvgDay,
            p.samll_est_units_avg_day_ratio as samllEstUnitsAvgDayRatio,
            p.samll_item_key_id				as samllItemKeyId,
            pc.product_category				as productCategory

        from
            bison.product p
        left join
            bison.product_category pc
        on
            p.product_category_id = pc.product_category_id

	    left join
	        (select
				   sp_item.product_id,
				   sp_item.user_id,
				   sp_item.country

				from
					bison_amz_product_inventory.sale_plan_item sp_item
				left join
					bison_amz_product_inventory.sale_plan sp
				on
					sp_item.sale_plan_id = sp.sale_plan_id
				left join
					bison_amz_product_inventory.user_product_amz_asin_rel rel
					on sp_item.product_id = rel.product_id
					and sp_item.user_id = rel.user_charge_id
				where
					sp.plan_date like concat('',#{localMonth},'%')
				group by
						sp_item.product_id,
						sp_item.country,
						sp_item.user_id
						) t1
        on
            p.product_id = t1.product_id
        left join
            bison.brand b
        on
            p.brand_id = b.brand_id
        left join
            bison.country c
        on
            t1.country = c.country_id
        where
            1 = 1
           <if test="brandId != 0">
               and t2.brand_id = #{brandId}
           </if>
            <if test="businessUnitId != 0">
                and p.business_unit_id = #{businessUnitId}
            </if>
            <if test="countryId != 0">
                and c.country_id = #{countryId}
            </if>
            <if test="productCategoryId != 0">
                and p.product_category_id = #{productCategoryId}
            </if>
            <if test="productId != 0">
                and p.product_id = #{productId}
            </if>

    </select>


    <select id="getLocalFnStorage" resultType="java.lang.Integer">
         SELECT
            sum(FLOOR(r1.i_quantity) + FLOOR(r8.i_quantity))
        FROM
            U8.rdrecords01 r1,
            U8.rdrecords08 r8,
            bison.product p
        where
            r1.c_inv_code = p.product_u8_code
            and p.product_u8_code  = r8.c_inv_code
            and p.product_id = #{productId}
            and (r1.c_define23 = 'FN' or r1.c_define23 = 'FNSKU')
            and (r8.c_define23 is null or r8.c_define23 = 'JP')
            group by p.product_id
    </select>

    <select id="getLocalFnExport" resultType="java.lang.Integer">
        SELECT
            sum(FLOOR(r9.i_quantity)) as storageNumber9
        FROM
            U8.rdrecords01 r9,
            bison.product p
        where
            r9.c_inv_code = p.product_u8_code
            and p.product_id = #{productId}
            and (r9.c_define23 = 'FNSKU' or r9.c_define23 is null)
            group by p.product_id
    </select>

    <select id="getLocalUpcStoreage" resultType="java.lang.Integer">
        SELECT
            FLOOR(sum(r1.i_quantity)+sum(r8.i_quantity))
        FROM
            U8.rdrecords01 r1,
            U8.rdrecords08 r8,
            bison.product p
        where
            r1.c_inv_code = p.product_u8_code
            and p.product_u8_code  = r8.c_inv_code
            and p.product_id = #{productId}
            and r1.c_define23 = 'UPC'
            group by p.product_id
    </select>

    <select id="getLocalUpcExport" resultType="java.lang.Integer">
        SELECT
            sum(FLOOR(r9.i_quantity)) as storageNumber9
        FROM
            U8.rdrecords01 r9,
            bison.product p
        where
            r9.c_inv_code = p.product_u8_code
            and p.product_id = #{productId}
            and r9.c_define23 = 'UPC'
            group by p.product_id
    </select>

    <select id="findSkuInventoryList" parameterType="com.leaderment.pojo.dto.InventoryDTO"  resultType="com.leaderment.pojo.vo.InventoryVO">


    </select>


</mapper>